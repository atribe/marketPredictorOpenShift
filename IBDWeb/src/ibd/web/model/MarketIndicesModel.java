package ibd.web.model;

import java.sql.Connection;
import java.sql.SQLException;

import ibd.web.DBManagers.MarketIndexDB;
import ibd.web.DBManagers.MarketIndexParametersDB;

/**
 * This class is the highest level class that deals with all things market index.
 * Initializes and updates databases
 * Runs the model to determine buy and sell dates
 * @author Allan
 *
 */
public class MarketIndicesModel {
	
	//							  Nasdaq  S&P500
	private static String[] indexList = {"^IXIC","^GSPC","^SML","^MID"};
	private static String[] indexParameterList;
	
	public static void main() {
		/*
		 * Dabase initialization Section
		 */
		//Initialize the price/volume databases for each index 
		MarketIndexDB.priceVolumeDBInitialization(indexList);
		
		/*
		 * setting the indexParameterList to be equal to the indexList+"_var"
		 * This means adding future indices only requires adding them to one list
		 * as the indexParameterList is autogenerated from indexList
		 */
		setIndexParameterList();
		
		//Initialize the model variables
		MarketIndexParametersDB.indexModelParametersInitialization(indexParameterList);		
		//Loop for Model parameters for each index
			//if table !exists
				//create it
	
			//if tables are empty
				//populate it
					//initial values would be the best values based on last optimization
		//End Model Parameter Loop
		
		//Market Index Models
			/*
			 * Models runs are not looped because you may want to run or optimize them one at a time
			 * I'll figure out this code after I figure out the above
			 */
			//Run model for Dow
			//Run model for SP500
			//Run model for Nasdaq
	}

	private static void setIndexParameterList() {
		indexParameterList = new String[indexList.length];

		for(int i = 0;i>indexList.length;i++) {
			indexParameterList[i]=indexList[i] +"vars";
		}
	}

	private static String[] getIndexList() {
		return indexList;
	}

	private static String[] getIndexParameterList() {
		return indexParameterList;
	}
}
